name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: advancedinstaller

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2

      - name: Run build
        # https://www.advancedinstaller.com/user-guide/command-line.html
        run: |
          docker build . --file Dockerfile --tag "dockertestimage"

      - name: Run help
        # https://www.advancedinstaller.com/user-guide/command-line.html
        run: |
          docker run dockertestimage 'AdvancedInstaller.com' /HELP

      - name: Run tests
        # https://www.advancedinstaller.com/user-guide/command-line.html
        run: |
          docker run -v "$(Get-Location)\tests:C:\tests" dockertestimage 'AdvancedInstaller.com' /build C:\tests\hello-world.aip
          Get-ChildItem -Recurse .

  # Push image to GitHub Package Registry.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    # needs: test

    runs-on: windows-2019
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag "dockerimage"

      - name: Log into registry
        # run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u louvard --password-stdin

      - name: Push image
        # docker hub muss verwendet werden weil GitHub nicht zu recht kommt mit windows server.
        run: |
          $IMAGE_ID="louvard/$($env:IMAGE_NAME)"
          $VERSION='16.8'

          echo "IMAGE_ID=$IMAGE_ID"
          echo "VERSION=$VERSION"

          docker tag "dockerimage" "$($IMAGE_ID):$($VERSION)"
          docker push "$($IMAGE_ID):$($VERSION)"
